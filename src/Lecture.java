public class Lecture {
    boolean isPositive(int value){

        System.out.println("Checking value...");
        return value > 0;

    }


    public static void main(String[] args) {


                Lecture main = new Lecture();

                if(main.isPositive(-5) || main.isPositive(12)){

                    System.out.println("Print!");

                }

            }
}


/*
GITHUB Gist - для отправки заданий на проверку

switch - уддобно использовать вместо многократного if else


        switch (value) {
            case 1:
                System.out.println(1);
            case 2:
                System.out.println(2);
                break;// если не будет брейка провалимся в следующий кейс
            case 3:
                System.out.println(3);
            default:// необязательный параметр , когда ни одно значение не подошло
                System.out.println(-1);
                break;
        }



       int age =45;
       boolean isTeenager = age< 20?true:false;//      !!!!!!!!!!!!!альтернативная запись вместо if else
       String name = age<20? "Option 1": "Option 2";
----------------------------------------------------------------
       //КЛАССЫ


        A a = new A();
        a.f="aojfh";
        a=new A();
        A e =a;
       // A e = new A();
        e.f="zksdjfh";
        System.out.println(a.f);
    }
}
class A {
    int r;
    String f;
}


        У классов есть состояние и поведение

        для объявления используют ключевое слово class
        переменные(состояние)-поля
         если не задавать параметры явно они принимают значение по умолчанию

         public класс в файле л=должен быть только один

        при создании объекта мы создаем ссылку на него
        ---------------------------------------------------------
        МЕТОДЫ

        методы-поведение объекта(именованный блок кода)
        тип возвращаемого значения\имя\параметры
        сигнатура метода -имя и набор параметров, внутри метода должны быть уникальными

        если тип возвращаемый должен быть return
        void - ничего не возвращает
        если не void - обязательно должен возвращать значение

        boolean isTeenager(){
        return age>9 && age<20;
        }

        return можно использовать в void методах
        если написать что-то после return будет ошибка - недостижимый участок кода

-----------------------------------------
        КОНСТРУКТОР -метод с тем же названием что и класс
        конструкторы ничего не возвращают
        при создании явного конструктора- конструктор по умолчанию удаляется

        IDEA FILE->LOCAL HISTORY (для возврата в прежний код)

  cntrl+N
  ___________
модификаторы доступа
применяются к полям, методам и классам

метод можно переопределять

alt+insert - IDEA для геттеров и сеттеров
immutable-не изменяемые данные


if(arg!=null && )

бинарный поиск



алгоритм(
дискретность-можно разбить на шаги
детерминированность-в каждом шаге знем что получим
завершаемость-должен решаться
универсальность-должен работать с различными данными удовлюусловию

большое О малое о

long time = System.currentTimeMillis();-до начала метода   1 января 1970

System.currentTimeMillis()-time; -после начала метода















         */







